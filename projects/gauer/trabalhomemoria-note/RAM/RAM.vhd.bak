library ieee;
use ieee.std_logic_1164.all;

entity single_port_ram is

	generic 
	(
		DATA_WIDTH : natural := 8;
		ADDR_WIDTH : natural := 6
	);

	port 
	(
		i_clk		: in std_logic;
		i_addr	: in natural range 0 to 2**ADDR_WIDTH - 1;
		i_data	: in std_logic_vector((DATA_WIDTH-1) downto 0);
		i_we		: in std_logic := '1';
		o_data	: out std_logic_vector((DATA_WIDTH -1) downto 0)
	);

end entity;

architecture behavioral of single_port_ram is

	-- Build a 2-D array type for the RAM
	subtype word_t is std_logic_vector((DATA_WIDTH-1) downto 0);
	type memory_t is array(2**ADDR_WIDTH-1 downto 0) of word_t;

	-- Declare the RAM signal.	
	signal ram : memory_t;

	-- Register to hold the address 
	signal addr_reg : natural range 0 to 2**ADDR_WIDTH-1;

begin

	process(i_we)
	begin
	if(i_we = '1') then
		ram(i_addr) <= i_data;
	end if;

	-- Register the address for reading
	addr_reg <= i_addr;
	end process;

	o_data <= ram(addr_reg);

end behavioral;
